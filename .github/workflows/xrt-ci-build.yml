name: XRT CI copy pacakges

env:  
  RELEASE: '2024.1'  
  PIPELINE: 'xrt' 
  ENV: 'test' 

on:  
  push:  
    branches:  
      - copy-packages-feature 

concurrency:  
  group: ${{ github.event.pull_request.head.repo.full_name }}-${{ github.event.pull_request.head.ref }}
  cancel-in-progress: true 
  
jobs:
  build:
    strategy:      
      matrix:      
        include:      
          - os: centos78      
            packageType: rpm      
          - os: centos8      
            packageType: rpm      
          - os: rhel9      
            packageType: rpm      
          - os: ubuntu2004      
            packageType: deb      
          - os: ubuntu2204      
            packageType: deb      
        
    runs-on: [self-hosted, Ubuntu-22.04]
    steps:  
      - name: Set env variables    
        run: |    
          echo "Setting environment variables..."      
          echo "XRT_VERSION_PATCH=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV    
          echo "PATH=/usr/bin:$PATH" >> $GITHUB_ENV     
    
      - name: Checkout PR   
        uses: actions/checkout@v4 
        with: 
          repository: "${{ github.event.pull_request.head.repo.full_name }}"
          ref: "${{ github.event.pull_request.head.ref }}"
          fetch-depth: 0
          path: ${{ github.workspace }}/${{ github.run_number }}  
          submodules: recursive   

      - name: Checkout private repository      
        uses: actions/checkout@v3   
        with:      
          repository: actions-int/composite-workflows
          github-server-url: ${{ secrets.SERVER_URL }}      
          token: ${{ secrets.ACCESS_TOKEN }}      
          path: composite-workflows 
          ref: copy-packages-feature
       
      - name: XRT build     
        uses: ./composite-workflows/build
        with:     
          pipeline: ${{ env.PIPELINE }} 
          osVersion: ${{ matrix.os }}  
          packageType: ${{ matrix.packageType }}  
          workspace: ${{ github.workspace }}
          buildNumber: ${{ github.run_number }}     
          accessToken: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}
          appConfig: ${{ secrets.APP_CONFIG }} 
          appConfig1: ${{ secrets.APP_CONFIG1 }} 
          appConfig2: ${{ secrets.APP_CONFIG2 }} 
          appConfig3: ${{ secrets.APP_CONFIG3 }} 

  # copy-packages:
  #   needs: build
  #   runs-on: [self-hosted, Ubuntu-22.04]
  #   steps:
  #     - name: Checkout private repository      
  #       uses: actions/checkout@v3   
  #       with:      
  #         repository: actions-int/composite-workflows
  #         github-server-url: ${{ secrets.SERVER_URL }}      
  #         token: ${{ secrets.ACCESS_TOKEN }}      
  #         path: composite-workflows 
  #         ref: copy-packages-feature
       
  #     - name: XRT copy packages build     
  #       uses: ./composite-workflows/copy-packages
  #       with:     
  #         workspace: ${{ github.workspace }}   
  #         buildNumber: ${{ github.run_number }}    
  #         release: ${{ env.RELEASE }}
  #         accessToken: ${{ secrets.ACCESS_TOKEN }} 
  #         repository: "${{ github.event.pull_request.head.repo.full_name }}"
  #         ref: "${{ github.event.pull_request.head.ref }}"

  windows-build:
    runs-on: Windows
    steps:
      - name: Checkout PR   
        uses: actions/checkout@v4 
        with: 
          repository: "${{ github.event.pull_request.head.repo.full_name }}"
          ref: "${{ github.event.pull_request.head.ref }}"
          fetch-depth: 0
          path: ${{ github.workspace }}/${{ github.run_number }}  
          submodules: recursive
          persist-credentials: false 
            
      - name: Checkout private repository      
        uses: actions/checkout@v3   
        with:      
          repository: actions-int/composite-workflows
          github-server-url: ${{ secrets.SERVER_URL }}      
          token: ${{ secrets.ACCESS_TOKEN }}      
          path: composite-workflows 
          ref: main
       
      - name: XRT windows build     
        uses: ./composite-workflows/windows-build
        with:     
          workspace: ${{ github.workspace }}/${{ github.run_number }}/build   
          buildNumber: ${{ github.run_number }}    
          release: ${{ env.RELEASE }}
          accessToken: ${{ secrets.ACCESS_TOKEN }} 
          workspaceg: ${{ github.workspace }}
          github-server-url: ${{ secrets.SERVER_URL }}

  apu-package-build:
    runs-on: apu
    # runs-on: Ubuntu-20.04
    steps:      
      - name: Set env variables    
        run: |    
          echo "Setting environment variables..."      
          echo "XRT_VERSION_PATCH=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV    
          echo "PATH=/usr/bin:$PATH" >> $GITHUB_ENV     
    
      - name: Checkout PR   
        uses: actions/checkout@v3 
        with: 
          repository: "${{ github.event.pull_request.head.repo.full_name }}"
          ref: "${{ github.event.pull_request.head.ref }}"
          fetch-depth: 0
          path: ${{ github.workspace }}/${{ github.run_number }}  
          submodules: recursive  

      - name: Checkout private repository      
        uses: actions/checkout@v3   
        with:      
          repository: actions-int/composite-workflows      
          token: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}       
          path: composite-workflows  
          ref: main
       
      - name: Apu package build for XRT     
        uses: ./composite-workflows/apu-package
        with:     
          pipeline: ${{ env.PIPELINE }}   
          workspace: ${{ github.workspace }}  
          buildNumber: ${{ github.run_number }}    
          apuPackage: 'True' 
          release: ${{ env.RELEASE }}  
          accessToken: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}
          appConfig: ${{ secrets.APP_CONFIG }} 
          appConfig1: ${{ secrets.APP_CONFIG1 }} 
          appConfig2: ${{ secrets.APP_CONFIG2 }} 
          appConfig3: ${{ secrets.APP_CONFIG3 }} 

  package-download:    
    needs: build    
    runs-on: [self-hosted, Ubuntu-22.04]    
    steps:    
      - name: Checkout private repository    
        uses: actions/checkout@v3 
        with:    
          repository: actions-int/composite-workflows    
          token: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}    
          path: composite-workflows 
          ref: copy-packages-feature
    
      - name: Use composite action package download     
        uses: ./composite-workflows/package-download   
        with:    
          runNumber: ${{ github.run_number }}    
          pipeline: ${{ env.PIPELINE }}    
          env: ${{ env.ENV }}  
          sshKey: ${{ secrets.CI_PRIVATE_SSH_KEY }}    
          accessToken: ${{ secrets.ACCESS_TOKEN }}
          NPATH: ${{ secrets.NPATH }}
          USER: ${{ secrets.USER }}
          github-server-url: ${{ secrets.SERVER_URL }}

  setenv-download:    
    needs: package-download    
    runs-on: [self-hosted, Ubuntu-22.04]    
    steps:

      - name: Checkout PR   
        uses: actions/checkout@v4 
        with: 
          repository: devops/setenv-XRT
          token: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}    
          path: ${{ github.workspace }}/${{ github.run_number }}  
          
      - name: Checkout private repository    
        uses: actions/checkout@v3 
        with:    
          repository: actions-int/composite-workflows    
          token: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}    
          path: composite-workflows 
          ref: copy-packages-feature
    
      - name: Use composite action package download     
        uses: ./composite-workflows/setenv   
        with:    
          runNumber: ${{ github.run_number }}    
          pipeline: ${{ env.PIPELINE }}    
          env: ${{ env.ENV }}
          workspace: ${{ github.workspace }}  
          buildNumber: ${{ github.run_number }} 
          sshKey: ${{ secrets.CI_PRIVATE_SSH_KEY }}    
          accessToken: ${{ secrets.ACCESS_TOKEN }}
          NPATH: ${{ secrets.NPATH }}
          USER: ${{ secrets.USER }}
          github-server-url: ${{ secrets.SERVER_URL }}

#  # Will implement the below section if needed.
#   extract-os:
#     needs: setenv-download
#     runs-on: [self-hosted, Ubuntu-22.04]
#     steps:
#       - name: Checkout PR   
#         uses: actions/checkout@v4 
#         with: 
#           repository: "${{ github.event.pull_request.head.repo.full_name }}"
#           ref: "${{ github.event.pull_request.head.ref }}"
#           fetch-depth: 0
#           path: ${{ github.workspace }}/${{ github.run_number }}

#       - name: Get the list of supported OS
#         run: |
#             build_version=$(cat ${{ env.PATH_DIR }}/artifact/opt/xilinx/xrt/version.json | jq -r '.BUILD_VERSION')
#             sed -i "s/@@VER@@/$build_version/g" ${{ env.PATH_DIR }}/artifact/setenv.sh
#             sed -i "s/@@VER@@/$build_version/g" ${{ env.PATH_DIR }}/artifact/setenv.csh
#             chmod -R 775 ${{ env.PATH_DIR }} || true 
#         shell: bash 

#  # Will implement the below section if needed.
#   package-os:  
#     needs: extract-os    
#     runs-on: [self-hosted, Ubuntu-22.04]
#     strategy:      
#       matrix:      
#         os_list: ${{ fromJson(needs.extract-platforms.outputs.board_list) }}  
#     steps:      
#       - name: Checkout private repository      
#         uses: actions/checkout@v3   
#         with:      
#           repository: actions-int/composite-workflows      
#           token: ${{ secrets.ACCESS_TOKEN }}
#           github-server-url: ${{ secrets.SERVER_URL }}      
#           path: composite-workflows   
#           ref: xoah
       
#       - name: Use composite action for pcie-hw       
#         uses: ./composite-workflows/pcie-hw  
#         with:     
#           organization: ${{ github.repository }}  
#           runNumber: ${{ github.run_number }}  
#           buildNumber: ${{ github.run_number }}_${{ github.run_attempt }} 
#           release: ${{ env.RELEASE }}
#           env: ${{ env.ENV }}  
#           pipeline: ${{ env.PIPELINE }} 
#           boardType: "pcie"  
#           boardState: "gating"  
#           boardMode: "hw"  
#           board: ${{ matrix.board_list }}      
#           runnerName: ${{ runner.name }}
#           accessToken: ${{ secrets.ACCESS_TOKEN }}  
#           sshKey: ${{ secrets.CI_PRIVATE_SSH_KEY }}   
#           apiKey: ${{ secrets.apiKey }}    
#           NPATH: ${{ secrets.NPATH }}
#           github-server-url: ${{ secrets.SERVER_URL }}

  # Release_to_all_sites:      
  #   needs: setenv-download  
  #   runs-on: [self-hosted, Ubuntu-22.04]     
  #   strategy:        
  #     matrix:        
  #       site: ['xco', 'xsj', 'xir', 'xhd', 'xdc'] 
  #   steps:      
  #     - name: Extract branch name      
  #       id: extract_branch      
  #       run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})" 

  #     - name: Checkout private repository    
  #       uses: actions/checkout@v3 
  #       with:    
  #         repository: actions-int/composite-workflows    
  #         token: ${{ secrets.ACCESS_TOKEN }}
  #         github-server-url: ${{ secrets.SERVER_URL }}    
  #         path: composite-workflows 
  #         ref: copy-packages-feature
    
  #     - name: Use composite action release-all-sites download     
  #       uses: ./composite-workflows/release-all-sites   
  #       with: 
  #         isProd: 'false'  
  #         site: ${{ matrix.site }}       
  #         pipeline: 'xrt'        
  #         release: '2024.1'      
  #         sshKey: ${{ secrets.CI_PRIVATE_SSH_KEY }}      
  #         runNumber: ${{ github.run_number }} 
  #         accessToken: ${{ secrets.ACCESS_TOKEN }}      
  #         buildNumber: ${{ github.run_number }}       
  #         runnerName: ${{ runner.name }}      
  #         branch: ${{ steps.extract_branch.outputs.branch }}    
  #         github-server-url: ${{ secrets.SERVER_URL }}
          
  # Upload_packages_to_Artifactory:  
  #   runs-on: [self-hosted, Ubuntu-22.04]  
  #   needs: package-download  
  #   steps:  
  #     - name: Checkout private repository    
  #       uses: actions/checkout@v3 
  #       with:    
  #         repository: actions-int/composite-workflows    
  #         token: ${{ secrets.ACCESS_TOKEN }}
  #         github-server-url: ${{ secrets.SERVER_URL }}    
  #         path: composite-workflows 
  #         ref: copy-packages-feature

  #     - name: Use composite action artifactory upload     
  #       uses: ./composite-workflows/artifactory-upload   
  #       with: 
  #         isProd: 'false'  
  #         pipeline: 'xrt'        
  #         release: '2024.1'      
  #         runNumber: ${{ github.run_number }} 
  #         accessToken: ${{ secrets.ACCESS_TOKEN }}      
  #         github-server-url: ${{ secrets.SERVER_URL }}

  # gradle-artifactory-upload:    
  #   needs: Upload_packages_to_Artifactory    
  #   runs-on: apu    
  #   steps:

  #     - name: Extract branch name      
  #       id: extract_branch      
  #       run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})" 

  #     - name: Checkout PR   
  #       uses: actions/checkout@v4 
  #       with: 
  #         repository: devops/gradle-artifactory-publish-script
  #         token: ${{ secrets.ACCESS_TOKEN }}
  #         github-server-url: ${{ secrets.SERVER_URL }}    
  #         path: ${{ github.workspace }}/${{ github.run_number }}  
          
  #     - name: Checkout private repository    
  #       uses: actions/checkout@v3 
  #       with:    
  #         repository: actions-int/composite-workflows    
  #         token: ${{ secrets.ACCESS_TOKEN }}
  #         github-server-url: ${{ secrets.SERVER_URL }}    
  #         path: composite-workflows 
  #         ref: copy-packages-feature
    
  #     - name: Use composite action package download     
  #       uses: ./composite-workflows/gradle-artifactory-upload   
  #       with:    
  #         runNumber: ${{ github.run_number }}    
  #         pipeline: ${{ env.PIPELINE }}    
  #         env: ${{ env.ENV }}
  #         workspace: ${{ github.workspace }}  
  #         buildNumber: ${{ github.run_number }} 
  #         branch: ${{ steps.extract_branch.outputs.branch }}
  #         accessToken: ${{ secrets.ACCESS_TOKEN }}
  #         github-server-url: ${{ secrets.SERVER_URL }}

  Release_to_xco:      
    needs: setenv-download  
    runs-on: [self-hosted, Ubuntu-22.04]     
    strategy:        
      matrix:        
        # site: ['xco', 'xsj', 'xir', 'xhd', 'xdc'] 
        site: ['xco'] 
    steps:      
      - name: Extract branch name      
        id: extract_branch      
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})" 

      - name: Checkout private repository    
        uses: actions/checkout@v3 
        with:    
          repository: actions-int/composite-workflows    
          token: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}    
          path: composite-workflows 
          ref: copy-packages-feature
    
      - name: Use composite action release-all-sites download     
        uses: ./composite-workflows/release-all-sites   
        with: 
          isProd: 'false'  
          site: ${{ matrix.site }}       
          pipeline: 'xrt'        
          release: '2024.1'      
          sshKey: ${{ secrets.CI_PRIVATE_SSH_KEY }}      
          runNumber: ${{ github.run_number }} 
          accessToken: ${{ secrets.ACCESS_TOKEN }}      
          buildNumber: ${{ github.run_number }}       
          runnerName: ${{ runner.name }}      
          branch: ${{ steps.extract_branch.outputs.branch }}    
          github-server-url: ${{ secrets.SERVER_URL }}  

  Release_to_all_sites:      
    needs: Release_to_xco  
    runs-on: [self-hosted, Ubuntu-22.04]     
    strategy:        
      matrix:        
        site: ['xsj', 'xir', 'xhd', 'xdc'] 
    steps:      
      - name: Extract branch name      
        id: extract_branch      
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})" 

      - name: Checkout private repository    
        uses: actions/checkout@v3 
        with:    
          repository: actions-int/composite-workflows    
          token: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}    
          path: composite-workflows 
          ref: copy-packages-feature
    
      - name: Use composite action release-all-sites download     
        uses: ./composite-workflows/release-all-sites   
        with: 
          isProd: 'false'  
          site: ${{ matrix.site }}       
          pipeline: 'xrt'        
          release: '2024.1'      
          sshKey: ${{ secrets.CI_PRIVATE_SSH_KEY }}      
          runNumber: ${{ github.run_number }} 
          accessToken: ${{ secrets.ACCESS_TOKEN }}      
          buildNumber: ${{ github.run_number }}       
          runnerName: ${{ runner.name }}      
          branch: ${{ steps.extract_branch.outputs.branch }}    
          github-server-url: ${{ secrets.SERVER_URL }}

  Upload_packages_to_Artifactory:  
    runs-on: [self-hosted, Ubuntu-22.04]  
    needs: Release_to_xco  
    steps:  
      - name: Checkout private repository    
        uses: actions/checkout@v3 
        with:    
          repository: actions-int/composite-workflows    
          token: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}    
          path: composite-workflows 
          ref: copy-packages-feature

      - name: Use composite action artifactory upload     
        uses: ./composite-workflows/artifactory-upload   
        with: 
          isProd: 'false'  
          pipeline: 'xrt'        
          release: '2024.1'      
          runNumber: ${{ github.run_number }} 
          accessToken: ${{ secrets.ACCESS_TOKEN }}      
          github-server-url: ${{ secrets.SERVER_URL }}

  gradle-artifactory-upload:    
    needs: Upload_packages_to_Artifactory    
    runs-on: [self-hosted, Ubuntu-22.04]   
    steps:

      - name: Extract branch name      
        id: extract_branch      
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})" 

      - name: Checkout PR   
        uses: actions/checkout@v4 
        with: 
          repository: devops/gradle-artifactory-publish-script
          token: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}    
          path: ${{ github.workspace }}/${{ github.run_number }}  
          
      - name: Checkout private repository    
        uses: actions/checkout@v3 
        with:    
          repository: actions-int/composite-workflows    
          token: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}    
          path: composite-workflows 
          ref: copy-packages-feature
    
      - name: Use composite action package download     
        uses: ./composite-workflows/gradle-artifactory-upload   
        with:    
          runNumber: ${{ github.run_number }}    
          pipeline: ${{ env.PIPELINE }}    
          env: ${{ env.ENV }}
          workspace: ${{ github.workspace }}  
          buildNumber: ${{ github.run_number }} 
          branch: ${{ steps.extract_branch.outputs.branch }}
          accessToken: ${{ secrets.ACCESS_TOKEN }}
          github-server-url: ${{ secrets.SERVER_URL }}
          sshKey: ${{ secrets.CI_PRIVATE_SSH_KEY }}
          runnerName: ${{ runner.name }}
  

